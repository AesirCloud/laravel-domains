<?php

namespace App\Policies;

use App\Models\User;
use {{ domainNamespace }}\Entities\{{ domain }};
use Illuminate\Auth\Access\HandlesAuthorization;

class {{ domain }}Policy
{
    use HandlesAuthorization;

    /**
     * Determine whether the user can view any {{ domain }} models.
     */
    public function viewAny(User $user): bool
    {
        return $user->can('{{ domainLower }}.viewAny');
    }

    /**
     * Determine whether the user can view the {{ domain }} model.
     */
    public function view(User $user, {{ domain }} ${{ domainLower }}): bool
    {
        return $user->can('{{ domainLower }}.view')
            || $user->id === ${{ domainLower }}->user_id;
    }

    /**
     * Determine whether the user can create {{ domain }} models.
     */
    public function create(User $user): bool
    {
        return $user->can('{{ domainLower }}.create');
    }

    /**
     * Determine whether the user can update the {{ domain }} model.
     */
    public function update(User $user, {{ domain }} ${{ domainLower }}): bool
    {
        return $user->can('{{ domainLower }}.update')
            || $user->id === ${{ domainLower }}->user_id;
    }

    /**
     * Determine whether the user can delete the {{ domain }} model.
     */
    public function delete(User $user, {{ domain }} ${{ domainLower }}): bool
    {
        return $user->can('{{ domainLower }}.delete')
            || $user->id === ${{ domainLower }}->user_id;
    }

    /**
     * Determine whether the user can restore the {{ domain }} model (soft-deleted).
     */
    public function restore(User $user, {{ domain }} ${{ domainLower }}): bool
    {
        return $user->can('{{ domainLower }}.restore')
            || $user->id === ${{ domainLower }}->user_id;
    }

    /**
     * Determine whether the user can permanently delete the {{ domain }} model (force-delete).
     */
    public function forceDelete(User $user, {{ domain }} ${{ domainLower }}): bool
    {
        return $user->can('{{ domainLower }}.forceDelete')
            || $user->id === ${{ domainLower }}->user_id;
    }
}
