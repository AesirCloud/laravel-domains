<?php

namespace App\Observers;

use App\Domains\{{ domain }}\Entities\{{ domain }};

class {{ domain }}Observer
{
    /**
     * Handle the creating event for the {{ domain }} model.
     */
    public function creating({{ domain }} ${{ domainLower }}): void
    {
        // ...
    }

    /**
     * Handle the created event for the {{ domain }} model.
     */
    public function created({{ domain }} ${{ domainLower }}): void
    {
        // ...
    }

    /**
     * Handle the updating event for the {{ domain }} model.
     */
    public function updating({{ domain }} ${{ domainLower }}): void
    {
        // ...
    }

    /**
     * Handle the updated event for the {{ domain }} model.
     */
    public function updated({{ domain }} ${{ domainLower }}): void
    {
        // ...
    }

    /**
     * Handle the deleting event for the {{ domain }} model.
     */
    public function deleting({{ domain }} ${{ domainLower }}): void
    {
        // ...
    }

    /**
     * Handle the deleted event for the {{ domain }} model.
     */
    public function deleted({{ domain }} ${{ domainLower }}): void
    {
        // ...
    }

    /**
     * Handle the restoring event for the soft-deleted {{ domain }} model.
     */
    public function restoring({{ domain }} ${{ domainLower }}): void
    {
        // ...
    }

    /**
     * Handle the restored event for the soft-deleted {{ domain }} model.
     */
    public function restored({{ domain }} ${{ domainLower }}): void
    {
        // ...
    }

    /**
     * Handle the force-deleting event for the {{ domain }} model.
     */
    public function forceDeleting({{ domain }} ${{ domainLower }}): void
    {
        // ...
    }

    /**
     * Handle the force-deleted event for the {{ domain }} model.
     */
    public function forceDeleted({{ domain }} ${{ domainLower }}): void
    {
        // ...
    }
}