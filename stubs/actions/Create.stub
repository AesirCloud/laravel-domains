<?php

namespace {{ actionsNamespace }};

use Lorisleiva\Actions\Concerns\AsAction;
use {{ domainNamespace }}\DomainServices\{{ domain }}Service;
use {{ domainNamespace }}\DataTransferObjects\{{ domain }}Data;
use {{ domainNamespace }}\Entities\{{ domain }};

class Create
{
    use AsAction;

    /**
     * Handle the action.
     *
     * @param  array<string, mixed>  $data
     * @return {{ domain }}
     */
    public function handle(array $data): {{ domain }}
    {
        // Validate or transform via DTO
        $dto = {{ domain }}Data::validate($data);

        // Use the domain service to create
        return app({{ domain }}Service::class)->create($dto);
    }

    /**
     * Handle the action as a job (if you want it queueable).
     *
     * @param  array<string, mixed>  $data
     * @return void
     */
    public function asJob(array $data): void
    {
        $this->handle($data);
    }
}
